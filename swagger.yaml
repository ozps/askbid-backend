swagger: '2.0'
info:
  description: API for using in AskBid project
  version: 1.0.0
  title: AskBid API
host: localhost:5000
tags:
- name: item
  description: Every thing about Item
- name: user
  description: Operations about user
schemes:
- http
- https
paths:
  /item/get_all_items:
    get:
      tags:
      - item
      summary: Get all items
      description: Returns items sorted by name
      operationId: getAllItems
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Item'
  /item/get_new_items:
    get:
      tags:
      - item
      summary: Get all items
      description: Returns items sorted by released date
      operationId: getNewItems
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Item'
  /item/get_popular_items:
    get:
      tags:
      - item
      summary: Get all items
      description: Returns items sorted by popularity
      operationId: getPopularItems
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: successful operation
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Item'
  /item/get_detail_item/{id}:
    get:
      tags:
      - item
      summary: Get detail of an item
      description: Returns a single item
      operationId: getDetailItem
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: ID of item to return
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Item'
  /item/search_items:
    post:
      tags:
      - item
      summary: Search for items
      description: Returns all the matching items
      operationId: searchItems
      produces:
      - application/json
      parameters:
      - name: state
        in: body
        description: Some details of items
        type: object
        properties:
          text:
            type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
  /user/sign_up:
    post:
      tags:
      - user
      summary: Sign Up
      description: Users want to sign up
      operationId: signUp
      produces:
      - application/json
      parameters:
      - name: state
        in: body
        description: Information of a user
        type: object
        properties:
          fullName:
            type: string
          email:
            type: string
          password:
            type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              status:
                type: string
  /user/sign_in:
    post:
      tags:
      - user
      summary: Sign In
      description: Users want to sign in
      operationId: signIn
      produces:
      - application/json
      parameters:
      - name: state
        in: body
        description: Information of a user
        type: object
        properties:
          email:
            type: string
          password:
            type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              status:
                type: string
              token:
                type: string
              userID:
                type: integer
        401:
          description: Authorization information is missing or invalid.
          schema:
            type: object
            properties:
              status:
                type: string
definitions:
  Item:
    type: object
    properties:
      ItemID:
        type: integer
        format: int64
      ItemImage:
        type: string
        description: Image path of an item
      ItemBrand:
        type: string
        description: Brand of an item
      ItemDesc: 
        type: string
        description: Description of an item
      ItemColor:
        type: string
        description: Color of an item
      ItemReleased:
        type: string
        format: date-time
      ItemClicked:
        type: integer
        format: int64
      


    -ItemImage: img. path
    -ItemReleased: date
    -ItemClicked: int



