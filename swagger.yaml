swagger: '2.0'
info:
    description: API for using in AskBid project
    version: 1.0.0
    title: AskBid API
host: localhost:5000
tags:
    - name: item
      description: Everything about item
    - name: user
      description: Operations about user
    - name: admin
      description: Operations about admin
    - name: order
      description: Everything about order
schemes:
    - http
    - https
securityDefinitions: # Bearer xxxxxx.yyyyyyy.zzzzzz
    Bearer:
        type: apiKey
        name: Authorization
        in: header
paths:
    /item/get_all_items:
        get:
            tags:
                - item
            summary: Get all items
            description: Returns items sorted by name
            operationId: getAllItems
            produces:
                - application/json
            parameters: []
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/item'
    /item/get_new_items:
        get:
            tags:
                - item
            summary: Get all items
            description: Returns items sorted by released date
            operationId: getNewItems
            produces:
                - application/json
            parameters: []
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/item'
    /item/get_popular_items:
        get:
            tags:
                - item
            summary: Get all items
            description: Returns items sorted by popularity
            operationId: getPopularItems
            produces:
                - application/json
            parameters: []
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/item'
    /item/get_item/{id}:
        get:
            tags:
                - item
            summary: Get detail of an item
            description: Returns a single item
            operationId: getItem
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Id of item to return
                  required: true
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/item'
    /item/search_items:
        post:
            tags:
                - item
            summary: Search for items
            description: Returns all the matching items
            operationId: searchItems
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Some details of items
                  type: object
                  properties:
                      detail:
                          type: string
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/item'
    /user/sign_up:
        post:
            tags:
                - user
            summary: Sign up
            description: Users want to sign up
            operationId: signUp
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of a user
                  type: object
                  properties:
                      fullName:
                          type: string
                      cardNo:
                          type: string
                      email:
                          type: string
                      password:
                          type: string
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                409:
                    description: The request could not be completed due to a conflict with the current state
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /user/sign_in:
        post:
            tags:
                - user
            summary: Sign in
            description: Users want to sign in
            operationId: signIn
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of a user
                  type: object
                  properties:
                      email:
                          type: string
                      password:
                          type: string
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            token:
                                type: string
                            userId:
                                type: integer
                            level:
                                type: integer
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /user/get_profile:
        post:
            security:
                - Bearer: []
            tags:
                - user
            summary: Get profile
            description: Users want to get profile
            operationId: getProfile
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Id of user to return
                  type: object
                  properties:
                      userId:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result: { $ref: '#/definitions/user' }

                403:
                    description: Forbidden
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /user/update_profile:
        post:
            security:
                - Bearer: []
            tags:
                - user
            summary: Update profile
            description: Users want to update profile
            operationId: updateProfile
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of a user
                  type: object
                  properties:
                      fullName:
                          type: string
                      address:
                          type: string
                      telNo:
                          type: string
                      balance:
                          type: number
                      bankNo:
                          type: string
                      userId:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /user/upload_avatar:
        post:
            security:
                - Bearer: []
            tags:
                - user
            summary: Upload avatar (has problem with formData to body in Swagger)
            description: Users want to upload avatar
            operationId: uploadAvatar
            produces:
                - application/json
            consumes:
                - multipart/form-data
            parameters:
                - in: formData
                  name: avatar
                  type: file
                  description: The avatar to upload
                - in: formData
                  name: userId
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                406:
                    description: Not acceptable
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /user/upload_card:
        post:
            security:
                - Bearer: []
            tags:
                - user
            summary: Upload card (has problem with formData to body in Swagger)
            description: Users want to upload card
            operationId: uploadCard
            produces:
                - application/json
            consumes:
                - multipart/form-data
            parameters:
                - in: formData
                  name: card
                  type: file
                  description: The card to upload
                - in: formData
                  name: userId
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                406:
                    description: Not acceptable
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /admin/get_all_cards:
        post:
            security:
                - Bearer: []
            tags:
                - admin
            summary: Get all cards
            description: Admin wants to get all cards
            operationId: getAllCards
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: level of admin
                  type: object
                  properties:
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/user'
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /admin/get_card_image:
        post:
            security:
                - Bearer: []
            tags:
                - admin
            summary: Get card image in base64
            description: Admin wants to get card image in base64
            operationId: Nothing
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: admin level and card image
                  type: object
                  properties:
                      cardImage:
                          type: string
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            image64:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                    type: object
                    properties:
                        status:
                            type: string
                404:
                    description: Not found
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /admin/verify:
        post:
            security:
                - Bearer: []
            tags:
                - admin
            summary: Verify
            description: Admin wants to verify a user
            operationId: verify
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Level of admin and target user
                  type: object
                  properties:
                      level:
                          type: integer
                      userId:
                          type: integer

            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /admin/ban:
        post:
            security:
                - Bearer: []
            tags:
                - admin
            summary: Ban
            description: Admin wants to ban a user
            operationId: ban
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Level of admin and target user
                  type: object
                  properties:
                      level:
                          type: integer
                      userId:
                          type: integer

            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /admin/add_item:
        post:
            security:
                - Bearer: []
            tags:
                - admin
            summary: Add item
            description: Admin wants to add item
            operationId: addItem
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of an item
                  type: object
                  properties:
                      brand:
                          type: string
                      desc:
                          type: string
                      color:
                          type: string
                      releasedDate:
                          type: string
                          format: date-time
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /admin/upload_item_image:
        post:
            security:
                - Bearer: []
            tags:
                - admin
            summary: Upload item image (has problem with formData to body in Swagger)
            description: Admin wants to upload an item image
            operationId: upload
            produces:
                - application/json
            consumes:
                - multipart/form-data
            parameters:
                - in: formData
                  name: image
                  type: file
                  description: The image to upload
                - in: formData
                  name: itemId
                  type: integer
                - in: formData
                  name: level
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                406:
                    description: Not acceptable
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /order/create_order:
        post:
            security:
                - Bearer: []
            tags:
                - order
            summary: Create order
            description: Users want to create order
            operationId: createOrder
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of an order
                  type: object
                  properties:
                      userId:
                          type: integer
                      itemId:
                          type: integer
                      size:
                          type: string
                      price:
                          type: number
                      flag:
                          type: integer
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /order/get_all_orders:
        get:
            tags:
                - order
            summary: Get all orders
            description: Returns orders sorted by published date
            operationId: getAllOrders
            produces:
                - application/json
            parameters: []
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/item'
    /order/get_user_orders/{id}:
        get:
            tags:
                - order
            summary: Get user orders
            description: Returns user orders sorted by published date
            operationId: getUserOrders
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Id of user to return
                  required: true
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/order'
    /order/get_item_orders/{id}:
        get:
            tags:
                - order
            summary: Get item orders
            description: Returns item orders sorted by published date
            operationId: getItemOrders
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Id of item to return
                  required: true
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/order'
    /order/get_order/{id}:
        get:
            tags:
                - order
            summary: Get order
            description: Returns an order
            operationId: getOrder
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Id of order to return
                  required: true
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/order'
    /order/update_order:
        post:
            security:
                - Bearer: []
            tags:
                - order
            summary: Update order
            description: Users want to update order
            operationId: updateOrder
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of an order
                  type: object
                  properties:
                      size:
                          type: string
                      price:
                          type: number
                      flag:
                          type: integer
                      orderId:
                          type: integer
                      userId:
                          type: integer
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /order/out_of_stock:
        post:
            security:
                - Bearer: []
            tags:
                - order
            summary: Update available
            description: Users want to update available to 0
            operationId: outOfStock
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Information of an order
                  type: object
                  properties:
                      orderId:
                          type: integer
                      userId:
                          type: integer
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /order/delete_order:
        post:
            security:
                - Bearer: []
            tags:
                - order
            summary: Delete order
            description: Users want to delete order
            operationId: deleteOrder
            produces:
                - application/json
            parameters:
                - name: state
                  in: body
                  description: Target order
                  type: object
                  properties:
                      orderId:
                          type: integer
                      userId:
                          type: integer
                      level:
                          type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                401:
                    description: Authorization information is missing or invalid
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
    /order/get_ask_price/{id}:
        get:
            tags:
                - order
            summary: Get ask price of an item
            description: Returns order sorted by price and choose only flag 0
            operationId: getAskPrice
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Id of item to return
                  required: true
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/order'
    /order/get_bid_price/{id}:
        get:
            tags:
                - order
            summary: Get bid price of an item
            description: Returns order sorted by price and choose only flag 1
            operationId: getBidPrice
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Id of item to return
                  required: true
                  type: integer
            responses:
                200:
                    description: Successful operation
                    schema:
                        type: object
                        properties:
                            status:
                                type: string
                            result:
                                type: array
                                items:
                                    $ref: '#/definitions/order'
definitions:
    item:
        type: object
        properties:
            id:
                type: integer
            brand:
                type: string
                description: Brand of an item
            desc:
                type: string
                description: Description of an item
            color:
                type: string
                description: Color of an item
            released_date:
                type: string
                format: date-time
                description: Released date of an item
            image:
                type: string
                description: Image path of an item
            visited_count:
                type: integer
                description: Visited count of an item
    user:
        type: object
        properties:
            id:
                type: integer
            full_name:
                type: string
                description: Full name of a user
            card_no:
                type: string
                description: Id card number of a user
            email:
                type: string
                description: Email of a user
            password:
                type: string
                description: Password of a user
            address:
                type: string
                description: Address of a user
            tel_no:
                type: string
                description: Telephone number of a user
            balance:
                type: number
                description: Balance of a user
            bank_no:
                type: string
                description: Bank account number of a user
            avatar_image:
                type: string
                description: Avatar image path of an user
            card_image:
                type: string
                description: Card image path of an user
            level:
                type: integer
                description: Level of a user (-1-Banned, 0-Normal, 1-Verified, 2-Admin)
    order:
        type: object
        properties:
            id:
                type: integer
            user_id:
                type: integer
                description: User id of item owner
            item_id:
                type: integer
                description: Item id of an item
            size:
                type: string
                description: Size of an item
            price:
                type: number
                description: Price per piece
            flag:
                type: integer
                description: Type of an item (0-Ask, 1-Bid)
            published_date:
                type: string
                format: date-time
                description: Published date of an item
            available:
                type: integer
                description: Stock of an item (0-Out, 1-In)
